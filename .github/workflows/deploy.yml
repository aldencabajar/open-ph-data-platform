name: build and deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GDRIVE_CREDENTIALS_DATA: ${{ secrets.GDRIVE_CREDENTIALS_DATA }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.in-project true --local
          poetry install

          echo PATH=${{ github.workspace }}/.venv/bin:$PATH >> $GITHUB_ENV

          curl https://install.duckdb.org | sh
          ${{ github.workspace }}/.venv/bin/playwright install

      - name: Setup DVC
        run: |
          dvc remote modify gdrive-remote gdrive_use_service_account true
          dvc remote modify gdrive-remote-release gdrive_use_service_account true


      - name: Download DVC Remote Files
        run: |
          dvc pull -r gdrive-remote

      - name: Build
        run: |  
          export DBT_PROFILES_DIR="${{ github.workspace }}/transform/profile/"
          dbt deps --project-dir transform/
          bash ./scripts/build.sh build
      
      - name: Push to remote
        run: |
          rsync -av --exclude='*.dvc' --exclude='landing' _build/* pkg/
          dvc add -r gdrive-remote-release pkg/*
          dvc push -r gdrive-remote-release
      
      - name: Generate token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Push to Data Registry
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git clone https://github.com/aldencabajar/open-ph-data-assets.git
          cd repo
          cp pkg/*.dvc open-ph-data-assets/
          cd open-ph-data-assets
          git add *.dvc
          git commit -m "Update DVC files from data platform [skip ci]"
          git push https://github.com/aldencabajar/open-ph-data-assets.git HEAD:main
      

